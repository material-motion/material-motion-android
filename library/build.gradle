apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.vanniktech.android.junit.jacoco'

group = 'com.github.material-motion'

install {
  repositories.mavenInstaller {
    pom.version = 'local'
    pom.artifactId = 'reactive-motion-android'
  }
}

android {
  compileSdkVersion rootProject.ext.compileSdkVersion
  buildToolsVersion rootProject.ext.buildToolsVersion

  defaultConfig {
    minSdkVersion rootProject.ext.minSdkVersion
    targetSdkVersion rootProject.ext.targetSdkVersion
    versionCode 1
    versionName "1.0"
    consumerProguardFiles 'proguard-rules.pro'
  }

  lintOptions {
    abortOnError false
  }

  buildTypes {
    debug {
      testCoverageEnabled true
    }
  }
}

dependencies {
  // If you are developing any dependencies locally, also list them in local.dependencies.
  compile 'com.github.material-motion:indefinite-observable-android:develop-SNAPSHOT'
  compile 'com.github.material-motion:gestures-android:develop-SNAPSHOT'
  compile 'com.github.material-motion:physics-android:develop-SNAPSHOT'
  compile "com.android.support:support-core-utils:$supportLibVersion"

  testCompile 'com.google.truth:truth:0.28'
  testCompile 'junit:junit:4.12'
  testCompile 'org.mockito:mockito-core:1.10.19'
  testCompile 'org.robolectric:robolectric:3.1.2'
}

// build a jar with source files
task sourcesJar(type: Jar) {
  from android.sourceSets.main.java.srcDirs
  classifier = 'sources'
}

task javadoc(type: Javadoc) {
  failOnError false
  source = android.sourceSets.main.java.sourceFiles
  classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
  classpath += configurations.compile
}

// build a jar with javadoc
task javadocJar(type: Jar, dependsOn: javadoc) {
  classifier = 'javadoc'
  from javadoc.destinationDir
}

artifacts {
  archives sourcesJar
  archives javadocJar
}
